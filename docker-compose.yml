version: "3.2"
services:
  php:
     restart: unless-stopped
     container_name: ${NAME}-php-${PHP_VERSION}
     tty: true
     user: 1000:1000
     working_dir: /var/www/html
     build:
       context: ./php
       args:
         PHP_VERSION: ${PHP_VERSION}
         USER_ID: 1000
         USER_NAME: ${NAME}-php-${PHP_VERSION}
     volumes:
       - ./public_html/:/var/www/html/
       - ./php/conf/custom.ini:/usr/local/etc/php/conf.d/custom.ini
     networks:
       - app-network

  apache:
     container_name: ${NAME}-apache
     build: ./apache/
     depends_on:
       - php
     ports:
       - ${APACHE_PORT}:80
     volumes:
       - ./public_html/:/var/www/html/
#       - ./logs/:/var/log/apache2/
     networks:
       - app-network

  db:
    restart: on-failure
    container_name: ${NAME}-db-${MYSQL_VERSION}
    build:
      context: ./db
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
        MYSQL_DATABASE: ${MYSQL_DB}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db/database:/var/lib/mysql
      - ./db/admin.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - app-network

  phpmyadmin:
     container_name: ${NAME}-phpMyAmdmin
     image: phpmyadmin/phpmyadmin
     ports:
         - ${PHPMYAADMIN_PORT}:80
     environment:
         PMA_USER: ${MYSQL_USER}
         PMA_PASSWORD: ${MYSQL_PASSWORD}
     depends_on:
       - db
     networks:
       - app-network

  mailhog:
     container_name: ${NAME}-mailhog
     image: mailhog/mailhog
     restart: always
     networks:
       - app-network
     ports:
       - ${MAILHOG_PORT}:8025
       - 1025:1025

#Docker Networks
networks:
  app-network:
    driver: bridge
